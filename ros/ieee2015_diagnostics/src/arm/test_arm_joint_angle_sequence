#!/usr/bin/python
import numpy as np
## Display
import matplotlib.pyplot as plt
import pygame
import time
## Math
import numpy as np
## Ros
import rospy
from tf import transformations as tf_trans
## Ros Msgs
from std_msgs.msg import Header, Float64
from geometry_msgs.msg import Point, PointStamped, PoseStamped, Pose, Quaternion
from dynamixel_msgs.msg import JointState


class Arm_Tester(object):
    def __init__(self):
        rospy.init_node('joint_angle_sequence_test')
        self.elbow_angle_pub = rospy.Publisher('/elbow_controller/command', Float64, queue_size=1)
        self.shoulder_angle_pub = rospy.Publisher('/shoulder_controller/command', Float64, queue_size=1)
        self.tests = [ # (Shoulder angle, elbow angle)
            (-0.721, -0.889), # Elbow perpendicular to shoulder, perpendicular to servo
            (0.3, -0.9), # Shoulder vertical, elbow close to base
            (0.3, -1.75), # Shoulder vertical, elbow perpendicular
            (0.5, -1.75), # Shoulder to the right, elbow unknown
        ]
        time.sleep(0.2)

    def run(self):
        while(not rospy.is_shutdown()):
            for test in self.tests:
                time.sleep(1)
                shoulder_angle, elbow_angle = test
                self.elbow_angle_pub.publish(elbow_angle)
                self.shoulder_angle_pub.publish(shoulder_angle)

if __name__ == '__main__':
    tester = Arm_Tester()
    tester.run()